[build]
nixpacksConfigPath = "nixpacks.toml"

[deploy]
numReplicas = 1
sleepApplication = false
restartPolicyType = "ON_FAILURE"
restartPolicyMaxRetries = 10

[[services]]
name = "flask-backend"
serviceType = "web"
rootDirectory = "frontend/backend"
buildCommand = "pip install -r requirements.txt"
startCommand = "python Repository.py"
envVars = [
  { name = "FLASK_ENV", value = "production" }
]
port = 5000

[[services]]
name = "node-backend"
serviceType = "web"
rootDirectory = "frontend/backend"
buildCommand = "npm install"
startCommand = "node server.js"
envVars = [
  { name = "NODE_ENV", value = "production" }
]
port = 3000

[[services]]
name = "frontend"
serviceType = "static"
rootDirectory = "frontend"
buildCommand = "npm install && npm run build"
staticBuildPath = "dist"
publishPath = "dist"
envVars = [
  { name = "VITE_API_URL", value = "${{ RAILWAY_SERVICE_FLASK_BACKEND_URL }}" },
  { name = "VITE_NODE_API_URL", value = "${{ RAILWAY_SERVICE_NODE_BACKEND_URL }}" }
]

[[services]]
name = "sqlserver"
image = "mcr.microsoft.com/mssql/server:2019-latest"
envVars = [
  { name = "ACCEPT_EULA", value = "Y" },
  { name = "SA_PASSWORD", value = "StrongPassword123!" },
  { name = "MSSQL_PID", value = "Express" }
]
